<!DOCTYPE html>
<html lang="en">
<%- include("partials/doc-head.ejs", {title: "Manage Projects"}); %>
<body>

<%- include('partials/header.ejs'); %>

<div class="function-container">
    <div class="function-item">
        <button class="goback-button" onclick="goBack()">Previous Page</button>
    </div>
    <div class="function-item">
        <button class="addteam-button" onclick="openAddProjectModal()">Add New Project</button>
    </div>
</div>

<main class="adminPage">
    <article>
        <ul class="profile-list" id="projectList">
            <% projects.forEach(project=> { %>
                <li class="profile-item" style="display: block;">
                    <div>
                        <div class="profile-image-box">
                            <script>
                                console.log("<%= project.avatar %>");
                            </script>
                            <img class="profile-image" src="/images/<%= project.avatar %>" />
                        </div>
                        <div class="profile-box">
                            <h2 class="project-name">
                                <%= project.projectname %>
                            </h2>
                            <div class="project-sponsor">
                                <%= project.sponsor %>
                            </div>
                            <div class="project-description-1">
                                Project <%= project.projectID %><br>
                                <div class="project-teamsize">
                                    Team Size: <%= project.teamSize %>
                                    <% if (project.maxTeams > project.teamSize) { %>
                                         - <%= project.maxTeams %>
                                    <% } %>
                                </div>
                            </div>
                            <div class="project-description">
                                <%= project.description %>
                            </div>
                            <div class="project-skills inline-list">
                                <%- include("partials/labeled-list.ejs", { label: "Skills needed" , list:
                                    project.skills || []}); %>
                            </div>
                            <div class="project-status-box">
                                <script>
                                    console.log("<%= project.team_assigned %>");
                                </script>
                                Project Status:
                                <% if (!project.team_assigned) { %>
                                <span class="project-status-open">Open</span>
                                <% } else { %>
                                <span class="project-status-closed">Closed</span>
                                <% } %>
                            </div>
                            <div class="adminEditButtons">
                                <div class="editProject">
                                    <button class="editProjectButton" onclick="editProject('<%= project.projectname %>', '<%= project.affiliation %>', '<%= project.maxTeams %>', '<%= project.description %>', '<%= project.skills %>', '<%= project.projectID %>')">Edit Project</button>
                                </div>
                                <div class="removeProject">
                                    <button class="removeProjectButton" onclick="removeProject('<%= project.projectname %>', '<%=project.projectID%>')">Remove Project</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
            <% }) %>
        </ul>
    </article>
</main>

<div id="addProjectModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeAddProjectModal()">&times;</span>
        <h2>Add New Project</h2>
        <form id="projectForm" enctype="multipart/form-data">
            <!-- "/admin/projects/add" -->
            <div class="project-content">
                <div class="upload-container">
                    <img class="profile-image-modal" id="new-profile-pic-modal" src="/images/profile.png" />                    <div class="image-link">
                        <label for="input-file">Upload Image</label>
                    </div>
                    <form class="upload-picture-new"
                        enctype="multipart/form-data">
                        <input type="file" accept="image/jpeg, image/png, image/jpg" id="input-file"
                            name="avatar" />
                </form>
                </div>

                <label for="newProjectName">Project Name</label>
                <input type="text" id="newProjectName" name="newProjectName" required><br><br>

                <label for="newProjectSponsor">Sponsor</label>
                <input type="text" id="newProjectSponsor" name="newProjectSponsor" required><br><br>
                
                <label for="newSize">Max Team Size</label>
                <input type="text" id="newSize" name="newSize" required><br><br>

                <label for="newMaxSize">Maximum Amount of Teams</label>
                <input type="text" id="newMaxSize" name="newMaxSize" required><br><br>

                <label for="newProjectSkills">Skills</label>
                <div class="skill-bubbles" id="skillBubbles"></div>
                <div class="newSkillButtons">
                    <div class="add-skill-newproj">
                        <input type="text" id="newSkillInputAdd" name="skill" placeholder="Enter a skill to add" />
                        <button type="button" id="addSkillButton" onclick="addSkillBubble()">Add Skill</button>
                    </div>
                    <div class="remove-skill-newproj">
                        <input type="text" id="newSkillInputRemove" name="skill" placeholder="Enter a skill to remove" />
                        <button type="button" id="removeSkillButton" onclick="removeSkillBubble(document.getElementById('newSkillInputRemove').value)">Remove Skill</button>
                    </div>
                </div>
            </div> 

            <div class="description-content">
                <label for="newProjectDescripton">Description</label>
                <textarea id="newProjectDescription" name="newProjectDescription" rows="4" required></textarea><br><br>
            </div>

            <div class="file-upload-content" id="fileUploadContent">
                <h2 class="upload-area-title">Upload Files</h2>
                <form action="">
                    <input type="file" id="upload" accept=".doc,.docx,.pdf" hidden>
                    <label for="upload" class="uploadlabel">
                        <img class="upload-img" src="/images/upload.png">
                        <p>Click to Upload</p>
                    </label>
                </form>                    
            </div>
            
            <div id="filewrapper">
                <h3 class="uploaded">Uploaded Documents</h3>
            </div>

            <div class="button-container">
                <button type="button" class="submit-button" onclick="submitProject()">Submit</button>
                <button type="button" class="cancel-button"onclick="closeAddProjectModal()">Cancel</button>            
            </div>
        </form>
    </div>
</div>

<div id="editProjectModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeEditProjectModal()">&times;</span>
        <h2>Edit Project</h2>
        <form id="projectForm">
            <div class="project-content">
                <input type="hidden" id="editProjectID" name="editProjectID" value ="">

                <label for="editProjectName">Project Name</label>
                <input type="text" id="editProjectName" name="editProjectName" required value="Example Project Name"><br><br>
    
                <label for="editSponsor">Sponsor</label>
                <input type="text" id="editSponsor" name="editSponsor" required value="Example Sponsor"><br><br>
                
                <label for="editMaxSize">Max Team Size</label>
                <input type="text" id="editMaxSize" name="editMaxSize" required value="5"><br><br>
    
                <label for="editProjectSkills">Skills</label>
                <div class="skill-bubbles" id="editSkillBubbles">
    
                </div>
                <div class="newSkillButtons">
                    <div class="add-skill-newproj">
                        <input type="text" id="newSkillInputAddEdit" name="skill" placeholder="Enter a skill to add" />
                        <button type="button" id="addSkillButton" onclick="editSkillBubble()">Add Skill</button>
                    </div>
                    <div class="remove-skill-newproj">
                        <input type="text" id="newSkillInputRemoveEdit" name="skill" placeholder="Enter a skill to remove" />
                        <button type="button" id="removeSkillButton" onclick="removeSkillBubble(document.getElementById('newSkillInputRemoveEdit').value)">Remove Skill</button>
                    </div>
                </div>
            </div>
            <div class="description-content">
                <label for="editDescription">Description</label>
                <textarea id="editDescription" name="editDescription" rows="4" required>Example Description</textarea><br><br>
            </div>

            <div class="file-upload-content" id="fileUploadContent">
                <h2 class="upload-area-title">Upload Files</h2>
                <form action="">
                    <input type="file" id="upload" accept=".doc,.docx,.pdf" hidden>
                    <label for="upload" class="uploadlabel">
                        <img class="upload-img" src="/images/upload.png">
                        <p>Click to Upload</p>
                    </label>
                </form>                    
            </div>
            
            <div id="filewrapper">
                <h3 class="uploaded">Uploaded Documents</h3>
            </div>

            <div class="button-container">
                <button type="button" class="submit-button"onclick="submitEditedProject()">Submit</button>
                <button type="button" class="cancel-button"onclick="closeEditProjectModal()">Cancel</button>            
            </div>
        </form>
    </div>
</div>

<div id="confirmDeleteModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeConfirmDeleteModal()">&times;</span>
        <h2>Confirm Deletion</h2>
        <p id="deleteMessage"></p>
        <div class="button-container">
            <form action="/admin/projects/delete" method="post">
                <input type="hidden" name="removeProjectID" id="removeProjectID" value="" />
                <button type="submit" class="delete-button" id="delete-button" onclick="deleteProject()">Delete</button>
            </form>
            <button class="cancel-button" type="button" onclick="closeConfirmDeleteModal()">Cancel</button>
        </div>
    </div>
</div>

<script>
    function goBack() {
        window.history.back();
    }

    function editProject(projectName, affiliation, maxTeams, description, skills, projectID) {
    const modal = document.getElementById("editProjectModal");
    modal.style.display = "block";

    document.getElementById("editProjectName").value = projectName;
    document.getElementById("editSponsor").value = affiliation;
    document.getElementById("editMaxSize").value = maxTeams;
    document.getElementById("editDescription").value = description;
    document.getElementById("editProjectID").value = projectID;

    const skillBubblesContainer = document.getElementById('editSkillBubbles');
    skillBubblesContainer.innerHTML = '';

    if (skills && skills.length > 0) {
        skills.split(',').forEach(skill => {
            const skillBubble = document.createElement('div');
            skillBubble.classList.add('skill-bubble');
            skillBubble.textContent = skill.trim();
            skillBubblesContainer.appendChild(skillBubble);
        });
    }
}

    function openAddProjectModal() {
        const modal = document.getElementById("addProjectModal");
        modal.style.display = "block";
    }

    function closeAddProjectModal() {
        const modal = document.getElementById("addProjectModal");
        modal.style.display = "none";
    }

    function closeEditProjectModal() {
        const modal = document.getElementById("editProjectModal");
        modal.style.display = "none";
    }

    function closeConfirmDeleteModal() {
        const modal = document.getElementById("confirmDeleteModal");
        modal.style.display = "none";
    }

    function removeProject(projectName, projectID) {
    const modal = document.getElementById("confirmDeleteModal");
    const deleteMessage = document.getElementById("deleteMessage");
    deleteMessage.textContent = `Are you sure you would like to delete Project (${projectName})?`;
    modal.setAttribute('data-project-id', projectID);
    modal.style.display = "block";
    
    const projectIDValue = parseInt(projectID);
    if (isNaN(projectIDValue)) {
        alert("Invalid project ID.");
        return;
    }

    document.getElementById("removeProjectID").value = projectID;
}

    window.addEventListener("load",()=>{
    const input = document.getElementById("upload");
    const filewrapper = document.getElementById("filewrapper");

    input.addEventListener("change",(e)=>{
        let fileName = e.target.files[0].name;
        let fileType = e.target.value.split(".").pop();
        fileshow(fileName, fileType);
    });

    const fileshow = (fileName, fileType) => {
        const showfileboxElem = document.createElement("div");
        showfileboxElem.classList.add("showfilebox");
        const leftElem = document.createElement("div");
        leftElem.classList.add("left");
        showfileboxElem.append(leftElem);
        const filetitleElem = document.createElement("h3");
        filetitleElem.innerHTML = fileName;
        leftElem.append(filetitleElem);
        showfileboxElem.append(leftElem);
        const rightElem = document.createElement("div");
        rightElem.classList.add("right");
        showfileboxElem.append(rightElem);
        const crossElem = document.createElement("span");
        crossElem.innerHTML = "&#215;";
        rightElem.append(crossElem);
        filewrapper.append(showfileboxElem);

        crossElem.addEventListener("click", () => {
            filewrapper.removeChild(showfileboxElem);
        });

        const avatarImg = document.getElementById("new-profile-pic-modal");
        avatarImg.src = URL.createObjectURL(input.files[0]);
    };
});

    function deleteProject() {
        const modal = document.getElementById("confirmDeleteModal");
        const projectID = modal.getAttribute('data-project-id');

        document.getElementById("removeProjectID").value = projectID;

        const form = document.querySelector("form[action='/admin/projects/delete']");
        form.submit();

        closeConfirmDeleteModal();
    }

    function submitEditedProject() {
        const editProjectID = document.getElementById('editProjectID').value;
        const editProjectName = document.getElementById('editProjectName').value;
        const editSponsor = document.getElementById('editSponsor').value;
        const editSize = document.getElementById('editMaxSize').value;
        const editDescription = document.getElementById('editDescription').value;

        const skillBubbles = document.querySelectorAll('#editSkillBubbles .skill-bubble');
        const skills = Array.from(skillBubbles).map(skillBubble => skillBubble.textContent.trim()); 

        const payload = {
            editProjectID: editProjectID,
            editProjectName: editProjectName,
            editSponsor: editSponsor,
            editSize: editSize,
            editDescription: editDescription,
            editSkills: skills
        };

        console.log(payload);

        fetch('/admin/projects/edit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        })
        .then(response => {
            if (response.ok) {
                closeEditProjectModal();
            } else {
                console.error('Failed to edit project:', response.statusText);
            }
        })
        .catch(error => {
            console.error('An unexpected error occurred:', error);
        });
    }

    function submitProject() {
        const avatar = document.getElementById('input-file').files[0];
        const projectName = document.getElementById('newProjectName').value;
        const sponsor = document.getElementById('newProjectSponsor').value;
        const maxSize = document.getElementById('newSize').value;
        const maxTeams = document.getElementById('newMaxSize').value;
        const description = document.getElementById('newProjectDescription').value;
        
        const skillBubbles = document.querySelectorAll('#skillBubbles .skill-bubble');
        const skills = Array.from(skillBubbles).map(skillBubble => skillBubble.textContent.trim());
        
        const payload = {
            projectName: projectName,
            newSponsor: sponsor,
            newSize: maxSize,
            newMaxSize: maxTeams,
            newDescription: description,
            newSkills: skills,
            // avatar: avatar  // BUG: This doesn't upload the file correctly
        };
        
        console.log(payload);

        fetch('/admin/projects/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        })
        .then(response => {
            if (response.ok) {
                closeAddProjectModal();
            } else {
                console.error('Failed to submit project:', response.statusText);
            }
        })
        .catch(error => {
            console.error('An unexpected error occurred:', error);
        });
}

    function addSkillBubble() {
        const skillInput = document.getElementById('newSkillInputAdd');
        const skill = skillInput.value.trim();
        if (skill !== '') {
            const skillBubblesContainer = document.getElementById('skillBubbles');
            const skillBubble = document.createElement('div');
            skillBubble.classList.add('skill-bubble');
            skillBubble.textContent = skill;
            skillBubblesContainer.appendChild(skillBubble);
            skillInput.value = '';
        }
}

function editSkillBubble() {
    const skillInput = document.getElementById('newSkillInputAddEdit');
    const skill = skillInput.value.trim();
    if (skill !== '') {
        const skillBubblesContainer = document.getElementById('editSkillBubbles');
        const skillBubble = document.createElement('div');
        skillBubble.classList.add('skill-bubble');
        skillBubble.textContent = skill;
        skillBubblesContainer.appendChild(skillBubble);
        skillInput.value = '';
    }
}

    function removeSkillBubble(skill) {
        const skillBubbles = document.querySelectorAll('.skill-bubble');
        skillBubbles.forEach(skillBubble => {
            if (skillBubble.textContent === skill) {
                skillBubble.remove();
            }
        });
    }

    let profilePic = document.getElementById("profile-pic");
    let inputFile = document.getElementById("input-file");
    inputFile.style.display ="none";

    inputFile.onchange = function () {
        let avatarImg = document.getElementById("new-profile-pic-modal");
        avatarImg.src = URL.createObjectURL(inputFile.files[0]);
    }

</script>

</body>
</html>